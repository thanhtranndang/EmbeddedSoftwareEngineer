/*
 * stm32f406vgt6.h
 *
 *  Created on: Oct 12, 2023
 *      Author: OS
 */

#ifndef INC_STM32F407VGT6_H_
#define INC_STM32F407VGT6_H_

#include <stdint.h>

#define __vol volatile

/* Base address of Flash and SRAM memories*/

#define FLASH_BASEADDR   			0x08000000 //
#define SRAM1_BASEADDR   			0x20000000 // 112KB
#define SRAM2_BASEADDR				0x2001C000
#define ROM_BASEADDR				0x1FFF0000
#define SRAM 						SRAM1_BASEADDR




/*
 *  AHBx and APBx Bus Peripheral base address
 */
#define PERIPH_BASE					0x4000 0000U // Start TIM2
#define APB1PERIPH_BASE				PERIPH_BASE
#define APB2PERIPH_BASE				0x40010000U // Start TIM1
#define AHB1PERIPH_BASE				0x40020000U // Start GPIOA
#define AHB2PERIPH_BASE				0x50000000U // USB OTG FS

/*
 * Base address of peripheral which are hanging on AHB1 bus
 * TODO: Complete for all other peripherals
 */

#define GPIOA_BASEADDR 				(AHB1PERIPH_BASE + 0x0000)
#define GPIOB_BASEADDR 				(AHB1PERIPH_BASE + 0x0400)
#define GPIOC_BASEADDR 				(AHB1PERIPH_BASE + 0x0800)
#define GPIOD_BASEADDR 				(AHB1PERIPH_BASE + 0x0c00)
#define GPIOE_BASEADDR 				(AHB1PERIPH_BASE + 0x1000)
#define GPIOF_BASEADDR 				(AHB1PERIPH_BASE + 0x1400)
#define GPIOG_BASEADDR 				(AHB1PERIPH_BASE + 0x1800)
#define GPIOH_BASEADDR 				(AHB1PERIPH_BASE + 0x1c00)
#define GPIOI_BASEADDR 				(AHB1PERIPH_BASE + 0x2000)
#define GPIOJ_BASEADDR				(AHB1PERIPH_BASE + 0x2400)
#define GPIOK_BASEADDR				(AHB1PERIPH_BASE + 0x2800)
/*
 * Base addresses of peripherals which are hanging on APB1 bus
 * TODO: Complete for all other peripherals
 */

#define I2C1_BASE       			(APB1PERIPH_BASE + 0x5400)
#define I2C2_BASE      				(APB1PERIPH_BASE + 0x5800)
#define I2C3_BASE       			(APB1PERIPH_BASE + 0x5C00)

#define SPI2_BASE					(AHB1PERIPH_BASE + 0x3800)
#define SPI3_BASE					(AHB1PERIPH_BASE + 0x3C00)

#define USART2_BASE					(AHB1PERIPH_BASE + 0x4400)
#define USART3_BASE					(AHB1PERIPH_BASE + 0x4800)
/*
 * Base addresses of peripherals which are hanging on APB2 bus
 * TODO: Complete for all other peripherals
 */

#define EXTI_BASE					(APB2PERIPH_BASE + 3C00)
#define SPI1_BASE					(APB2PERIPH_BASE + 3000)
#define SYSCFG_BASE					(APB2PERIPH_BASE + 3C00)
#define USART6_BASE					(APB2PERIPH_BASE + 1400)
#define USART1_BASE					(APB2PERIPH_BASE + 1000)



/****************************Peripheral Register Definition Structures***************************/
/*
 * Note:
 */

typedef struct {
	__vol uint32_t MODER;					/* GPIO port mode register,                  Address offset: 0x00*/
	__vol uint32_t OTYPER;				/* GPIO port output type register            Address offset: 0x04*/
	__vol uint32_t OSPEEDR;				/* GPIO port output speed register           Address offset: 0x08*/
	__vol uint32_t PUPDR;					/* GPIO port pull-up/pull-down register      Address offset: 0x0C*/
	__vol uint32_t IDR;					/* GPIO port input data register             Address offset: 0x10*/
	__vol uint32_t ODR;					/* GPIO port output data register            Address offset: 0x14*/
	__vol uint32_t BSRR;					/* GPIO port bit set/reset register          Address offset: 0x18*/
	__vol uint32_t LCKR;					/* GPIO port configuration lock register     Address offset: 0x1C*/
	__vol uint32_t AFR[2];				/* GPIO alternate function low register AFR[0] Address Offset: 0x20,
										   GPIO alternate function low register AFR[1] Address Offset: 0x24,*/

} GPIO_RegDef_t;













#endif /* INC_STM32F407VGT6_H_ */
